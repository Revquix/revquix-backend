version: '3.8'

name: redis-stack

services:
  redis-master:
    image: redis/redis-stack-server:latest
    container_name: revquix-redis-master
    hostname: redis-master
    restart: unless-stopped
    ports:
      - "${REDIS_MASTER_EXTERNAL_PORT:-6379}:6379"
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./config/redis/master.conf:/etc/redis/redis.conf
      - redis_master_data:/data
    environment:
      - REDIS_REPLICATION_MODE=master
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - revquix-network
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: ${REDIS_HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${REDIS_HEALTH_CHECK_TIMEOUT:-5s}
      retries: ${REDIS_HEALTH_CHECK_RETRIES:-3}
      start_period: ${REDIS_HEALTH_CHECK_START_PERIOD:-10s}
    env_file:
      - .env

  redis-replica-1:
    image: redis/redis-stack-server:latest
    container_name: revquix-redis-replica-1
    hostname: redis-replica-1
    restart: unless-stopped
    ports:
      - "${REDIS_REPLICA_1_PORT:-6380}:6379"
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./config/redis/replica.conf:/etc/redis/redis.conf
      - redis_replica1_data:/data
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=${REDIS_MASTER_HOST:-redis-master}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - revquix-network
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: ${REDIS_HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${REDIS_HEALTH_CHECK_TIMEOUT:-5s}
      retries: ${REDIS_HEALTH_CHECK_RETRIES:-3}
      start_period: ${REDIS_HEALTH_CHECK_START_PERIOD:-10s}
    env_file:
      - .env

  redis-replica-2:
    image: redis/redis-stack-server:latest
    container_name: revquix-redis-replica-2
    hostname: redis-replica-2
    restart: unless-stopped
    ports:
      - "${REDIS_REPLICA_2_PORT:-6381}:6379"
    command: redis-server /etc/redis/redis.conf
    volumes:
      - ./config/redis/replica.conf:/etc/redis/redis.conf
      - redis_replica2_data:/data
    environment:
      - REDIS_REPLICATION_MODE=slave
      - REDIS_MASTER_HOST=${REDIS_MASTER_HOST:-redis-master}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - revquix-network
    depends_on:
      redis-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: ${REDIS_HEALTH_CHECK_INTERVAL:-30s}
      timeout: ${REDIS_HEALTH_CHECK_TIMEOUT:-5s}
      retries: ${REDIS_HEALTH_CHECK_RETRIES:-3}
      start_period: ${REDIS_HEALTH_CHECK_START_PERIOD:-10s}
    env_file:
      - .env

  redis-sentinel-1:
    image: redis/redis-stack-server:latest
    container_name: revquix-redis-sentinel-1
    hostname: redis-sentinel-1
    restart: unless-stopped
    ports:
      - "${REDIS_SENTINEL_1_PORT:-26379}:26379"
    command: |
      sh -c "
        echo 'Waiting for Redis instances to be ready...'
        sleep 45
        echo 'Starting Sentinel 1...'
        redis-sentinel /etc/redis/sentinel.conf
      "
    volumes:
      - ./config/redis/sentinel.conf:/etc/redis/sentinel.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - revquix-network
    depends_on:
      redis-master:
        condition: service_healthy
      redis-replica-1:
        condition: service_healthy
      redis-replica-2:
        condition: service_healthy
    env_file:
      - .env

  redis-sentinel-2:
    image: redis/redis-stack-server:latest
    container_name: revquix-redis-sentinel-2
    hostname: redis-sentinel-2
    restart: unless-stopped
    ports:
      - "${REDIS_SENTINEL_2_PORT:-26380}:26379"
    command: |
      sh -c "
        echo 'Waiting for Redis instances to be ready...'
        sleep 50
        echo 'Starting Sentinel 2...'
        redis-sentinel /etc/redis/sentinel.conf
      "
    volumes:
      - ./config/redis/sentinel.conf:/etc/redis/sentinel.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - revquix-network
    depends_on:
      redis-master:
        condition: service_healthy
      redis-replica-1:
        condition: service_healthy
      redis-replica-2:
        condition: service_healthy
    env_file:
      - .env

  redis-sentinel-3:
    image: redis/redis-stack-server:latest
    container_name: revquix-redis-sentinel-3
    hostname: redis-sentinel-3
    restart: unless-stopped
    ports:
      - "${REDIS_SENTINEL_3_PORT:-26381}:26379"
    command: |
      sh -c "
        echo 'Waiting for Redis instances to be ready...'
        sleep 55
        echo 'Starting Sentinel 3...'
        redis-sentinel /etc/redis/sentinel.conf
      "
    volumes:
      - ./config/redis/sentinel.conf:/etc/redis/sentinel.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    networks:
      - revquix-network
    depends_on:
      redis-master:
        condition: service_healthy
      redis-replica-1:
        condition: service_healthy
      redis-replica-2:
        condition: service_healthy
    env_file:
      - .env

  redisinsight:
    image: redislabs/redisinsight:latest
    container_name: revquix-redisinsight
    hostname: redisinsight
    restart: unless-stopped
    ports:
      - "${REDISINSIGHT_PORT:-5540}:5540"
    volumes:
      - redisinsight_data:/data
    networks:
      - revquix-network
    depends_on:
      redis-master:
        condition: service_healthy
    environment:
      - RIPORT=5540
      - RIHOMEDIR=/data
    env_file:
      - .env

volumes:
  redis_master_data:
    driver: local
    name: revquix-redis-master-data
  redis_replica1_data:
    driver: local
    name: revquix-redis-replica1-data
  redis_replica2_data:
    driver: local
    name: revquix-redis-replica2-data
  redisinsight_data:
    driver: local
    name: revquix-redisinsight-data

networks:
  revquix-network:
    name: revquix-network
    driver: bridge
